
[4] -- [player] -> Human,CpuPlayer

..1-0grea
122
..2


column 3 

[0][2]
[1][2]
[2][2]


arr[3][3];


if you want to set row 1 column 1 > 1
board[1][1] = 1;

loop over the array and check columnNumber-1 spot in each row arrayLength


----------
Scenario 1
// empty board
...
...
...


1 - player 1 says , put in column 1
-run vaidatekMove if yes
-iterate backwards through array
-



...
.11
1..

player 1 - column 1

...
111
1..



....
....
1...
1...

....
1...
1...
1...

--------
diagonal

right diagonal match
....
.1..
..1.
...1

left diagonal match
....
..1.
.1..
1...

bottomLeft  to TopRight
bottomRight  to TopLeft

1...1
..1..
1...1

connect 3

bottomleft: row +1; column -1;
top right row -1; column +1;
bottomright: row +1 column +1
top left: row -1 column -1

[0,0][0,1][0,2][0,3]
[1,0][1,1][1,2][1,3]
[2,0][2,1][2,2][2,3]
[3,0][3,1][3,2][3,3]

if somebody fills in at position [1,2]

the bottom left to top right diagonal will have values -> [3,0][2,1][1,2][0,3]
[2,3] [1,2] [0,1]

---1---
--12---
-121---
1212---







package connect4;

public class example {
/*	public static void main(String s[]) {
		// take a grid N x N
		// for the first diagonal
		//check down and to left first 
		//check up and to the right next
		
		// for second diagonal
		//check bottom right to top left
		//check top left to bottom right
		//int exampleBoard [4][4];
		
		int rowCount = 4;
		int columnCount = 4;
		
		int row = 1;
		int column = 2;
		
	   // bottom left
		while (row<rowCount && column>=0) {
			
			System.out.println("row,column are " +row +","+ column);
			row++;
			column--;
		}
		
	row = 1;
	column = 2;
		
		//top right: d1
		while(row>=0 && column<= columnCount) {
			System.out.println("row,column are " +row +","+ column);
			row--;
			column ++;
		}
		row = 1;
		column = 2;
		
		//bottom right: d1
		while(row<rowCount && column<columnCount) {
			System.out.println("row,column are " +row +","+ column);
			row++;
			column ++;
			
		}
		
		row = 1;
		column = 2;
		//top left
		while(row>=0 && column>=0) {
			System.out.println("row,column are " +row +","+ column);
			row--;
			column --;
			
		}
		
		
	}
}
*/